---
- name: Reset kubernetes cluster
  become: true
  block:
    - name: Force stop kubelet service
      service:
        name: kubelet
        state: stopped
      when:
        - inventory_hostname in groups['kubernetes']

    - name: Force stop all running containers
      shell: |
        crictl ps -q | xargs -r crictl stop || true
        crictl ps -a -q | xargs -r crictl rm || true
      when:
        - inventory_hostname in groups['kubernetes']

    - name: Reset kubernetes cluster with timeout
      kube_toolbox:
        module_name: kubeadm
        module_args: "reset -f"
      register: reset_result
      when:
        - inventory_hostname in groups['kubernetes']
      async: 180  # 设置3分钟超时
      poll: 0     # 不等待任务完成

    - name: Wait for reset to complete
      async_status:
        jid: "{{ reset_result.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 36  # 最多重试36次
      delay: 5     # 每次重试间隔5秒
      when:
        - inventory_hostname in groups['kubernetes']

  rescue:
    - name: Handle reset failure
      debug:
        msg: "Kubernetes reset failed, attempting force cleanup..."
      when:
        - inventory_hostname in groups['kubernetes']

- name: Clean up all kubernetes related files and services
  become: true
  block:
    - name: Clean up CNI configuration
      file:
        path: /etc/cni/net.d
        state: absent
      when:
        - inventory_hostname in groups['kubernetes']

    - name: Clean up network interfaces
      shell: |
        ip link delete cni0 2>/dev/null || true
        ip link delete flannel.1 2>/dev/null || true
      when:
        - inventory_hostname in groups['kubernetes']

    - name: Clean up IPVS tables
      shell: ipvsadm --clear
      when:
        - inventory_hostname in groups['kubernetes']
        - ansible_os_family == "RedHat"

    - name: Clean up iptables rules
      shell: |
        iptables -F
        iptables -X
        iptables -t nat -F
        iptables -t nat -X
        iptables -t mangle -F
        iptables -t mangle -X
      when:
        - inventory_hostname in groups['kubernetes']

    - name: Clean up kubernetes configuration files
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /etc/kubernetes
        - /var/lib/kubelet
        - /var/lib/etcd
        - /var/log/pods
        - "{{ ansible_env.HOME }}/.kube/config"
      when:
        - inventory_hostname in groups['kubernetes']

    - name: Stop and disable kubernetes related services
      service:
        name: "{{ item }}"
        state: stopped
        enabled: no
      with_items:
        - kubelet
        - docker
        - containerd
      when:
        - inventory_hostname in groups['kubernetes']

    - name: Clean up for kubernetes worker dirs
      file:
        path: "{{ kube_application_dir }}"
        state: absent
      connection: local
      run_once: True

  rescue:
    - name: Handle cleanup failure
      debug:
        msg: "Some cleanup tasks failed, but continuing..."
      when:
        - inventory_hostname in groups['kubernetes']

- name: Print destroy results
  debug:
    msg: >-
      Kubernetes cluster has been successfully destroyed.
      All related configurations and data have been cleaned up.
  connection: local
  run_once: True
